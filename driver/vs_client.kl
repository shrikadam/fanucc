PROGRAM VS_CLIENT
------------------------------------------------------------------------------------------
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE = ERROR + COMMAND + TPENABLE
%ENVIRONMENT flbt
%ENVIRONMENT strng
%ENVIRONMENT regope
%COMMENT = 'Reg-Ops'
------------------------------------------------------------------------------------------
VAR 
    entry       : INTEGER
    status      : INTEGER
    comm_file   : FILE 
	cmd			: STRING[128]
    cpose       : XYZWPR
    ref_posns   : INTEGER
    stat        : INTEGER
    temp_str   : STRING[128]
    dx          : REAL
    dy          : REAL
    dz          : REAL
    dw          : REAL
    dp          : REAL
    dr          : REAL
    lrx          : REAL
    lry          : REAL
    lrz          : REAL
    lrw          : REAL
    lrp          : REAL
    lrr          : REAL
------------------------------------------------------------------------------------------
BEGIN 
    -- Clear TP Screen
    WRITE(CHR(128), CHR(137))
    FORCE_SPMENU(TP_PANEL, SPI_TPUSER, 1)
    WRITE('Started TCP/IP Client Program...', cr)

    -- Set the Server Port
    SET_VAR(entry, '*SYSTEM*', '%HOSTS_CFG[6].$SERVER_PORT', 30000, status)
    WRITE('Connecting to Server...', cr)

    -- Clean Start Server Tag
    MSG_DISCO('C6:', status)
    CLOSE FILE comm_file

    -- Connect to Client
    -- SET_FILE_ATR(comm_file, ATR_IA)
    SET_FILE_ATR(comm_file, ATR_UF)
    MSG_CONNECT('C6:', status)

    cpose.x = 0
    cpose.y = 0
    cpose.z = 0
    cpose.w = 0
    cpose.p = 0
    cpose.r = 0
    SET_POS_REG(7, cpose, stat)

    IF status = 0 THEN
        -- Accept the Connection
        WRITE('Server Connection Accepted.', cr)
        OPEN FILE comm_file('rw', 'C6:')
        FLG[2] = ON
        -- WRITE comm_file ('Hello from the Robot!')

        ref_posns = 0

        WHILE (ref_posns < 3) DO
            WAIT FOR (FLG[3] = ON)
            WRITE comm_file (31)
            FLG[3] = OFF
            ref_posns = ref_posns + 1
            CNV_INT_STR(ref_posns, 1, 0, temp_str)
            WRITE('Captured at position > ', temp_str, cr)
        ENDWHILE

        WRITE comm_file (41)
        READ comm_file (lrx, lry, lrz, lrw, lrp, lrr)
        cpose.x = lrx
        cpose.y = lry
        cpose.z = lrz
        cpose.w = lrw
        cpose.p = lrp
        cpose.r = lrr
        SET_POS_REG(7, cpose, stat)
        FLG[4] = ON

        WAIT FOR (FLG[5] = ON)
        WRITE comm_file (42)
        WRITE('Starting DPM...', cr)

        WHILE (FLG[5] = ON) DO
            READ comm_file (dx, dy, dz, dw, dp, dr)
            stat = 0
	        SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[1].$INI_OFS', dx, stat)
            SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[2].$INI_OFS', dy, stat)
            SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[3].$INI_OFS', dz, stat)
            SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[4].$INI_OFS', dw, stat)
            SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[5].$INI_OFS', dp, stat)
            SET_VAR(0, '*SYSTEM*', '$DPM_SCH[1].$GRP[1].$OFS[6].$INI_OFS', dr, stat)
        ENDWHILE

        -- Close the Connection
        WRITE('Disconnecting...', cr)
        MSG_DISCO('C6:', status)
        WRITE('Done.', cr)
    ENDIF 
END VS_CLIENT